version: '3.7'

x-airflow-common:
  &airflow-common
  build: .
  env_file:
        - .env.example
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
  depends_on:
    - database
    - object_storage
  links:
    - database:mysql
    - object_storage:minio

services:
    database:
        image: mysql:8.0.32
        volumes: 
            - ./database_dump:/docker-entrypoint-initdb.d/
            # - database_volume:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=not_admin
            # - MYSQL_USER=masbro
            # - MYSQL_PASSWORD=mantap
        ports:
            - 3306:3306

    object_storage:
        image: bitnami/minio:latest
        ports:
            - '9000:9000'
            - '9001:9001'
        environment:
            - MINIO_ROOT_USER=minio-root-user
            - MINIO_ROOT_PASSWORD=minio-root-password
            - "MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE"
            - "MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
    createbuckets:
        image: minio/mc
        depends_on:
            - object_storage
        links:
            - object_storage:minio
        entrypoint: >
            /bin/sh -c "
            /usr/bin/mc config host add myminio http://minio:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY;
            /usr/bin/mc rm -r --force myminio/somebucketname;
            /usr/bin/mc mb myminio/somebucketname;
            exit 0;
            "

    airflow-init:
        << : *airflow-common
        container_name: airflow_init
        entrypoint: /bin/bash
        command:
        - -c
        - airflow users list || ( airflow db init &&
            airflow users create
            --role Admin
            --username airflow
            --password airflow
            --email airflow@airflow.com
            --firstname airflow
            --lastname airflow )
        restart: on-failure

    airflow-webserver:
        << : *airflow-common
        command: airflow webserver
        ports:
        - 8080:8080
        container_name: airflow_webserver
        restart: always

    airflow-scheduler:
        << : *airflow-common
        command: airflow scheduler
        container_name: airflow_scheduler
        restart: always